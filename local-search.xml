<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>HTML常见问题以及技巧</title>
    <link href="/2022/04/05/HTML%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7/"/>
    <url>/2022/04/05/HTML%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="width属性的“继承”问题"><a href="#width属性的“继承”问题" class="headerlink" title="width属性的“继承”问题"></a>width属性的“继承”问题</h2><p>常见的拥有继承性的属性以<span class="label label-primary">text-</span>、<span class="label label-primary">font-</span>、<span class="label label-primary">line-</span>开头的属性较为常用。其中也有例外如<span class="label label-primary">a</span>标签的字体颜色是不继承的，它有它自己的默认颜色-<span style="color:rgb(82, 164, 225);">蓝色</span>，下划线等自带样式，<span class="label label-primary">h1~h6</span>的字体大小是不继承的，跟<span class="label label-primary">a</span>标签一样都是有自带默认值，除非单独为其设置样式才可以改变。</p><ol><li><strong>子元素是块级元素且无定位或浮动时，是不需要写width属性，就可以默认“继承”的。否则就要特殊声明一下width属性。</strong></li><li><strong>当使用width:100%的时候 也要注意其基准点到底是谁</strong><ul><li>对于使用position:relative的子元素或浮动的子元素,其基准点始终是基于其直接父元素而言的，跟其父元素是否有定位无关。</li><li>对于绝对定位position:absolute的子元素，其基准点是相对于离其最近的一层定位父元素而言。如果其所有父级元素均无定位，则是相对于body而言。</li><li>对于使用position:fixed的子元素，其基准点就是body。跟父元素无关。</li></ul></li></ol><h2 id="为什么块状元素浮动后就不会独占一行了？"><a href="#为什么块状元素浮动后就不会独占一行了？" class="headerlink" title="为什么块状元素浮动后就不会独占一行了？"></a>为什么块状元素浮动后就不会独占一行了？</h2><p>因为浮动的包裹性，浮动后元素只会占据该占据的空间<strong>（包裹性指的是，浮动元素的宽度会收缩到与内容一致，由于包裹性的特点，浮动元素一般需要手动设置width）</strong>。</p><h2 id="float和positio：relative可以同时用吗？如果能，为什么能？该元素是否还在标准文档流中？"><a href="#float和positio：relative可以同时用吗？如果能，为什么能？该元素是否还在标准文档流中？" class="headerlink" title="float和positio：relative可以同时用吗？如果能，为什么能？该元素是否还在标准文档流中？"></a>float和positio：relative可以同时用吗？如果能，为什么能？该元素是否还在标准文档流中？</h2><p>float和relative没有任何冲突，但是float不能和absolute同时使用，float之后元素就不在标准文档流中了，relative对这个没有任何影响。</p><h2 id="CSS-min-height属性"><a href="#CSS-min-height属性" class="headerlink" title="CSS min-height属性"></a>CSS min-height属性</h2><p>该属性值会对元素的高度设置一个最低限制。因此，元素可以比指定值高，但不能比其矮，不允许指定负值，没有继承性。<strong>一般用在解决二级菜单内容超出规定区域的问题上</strong>。</p><h2 id="sticky-粘性布局特性"><a href="#sticky-粘性布局特性" class="headerlink" title="sticky-粘性布局特性"></a>sticky-粘性布局特性</h2><p>position:sticky有个非常重要的特性，那就是sticky元素效果完全受制于父级元素们。<br>这和position:fixed定位有着根本性的不同，fixed元素直抵页面根元素，其他父元素对其left/top定位无法限制。</p><p>sticky元素以下一些特性表现：</p><ol><li>父级元素不能有任何overflow:visible以外的overflow设置，否则没有粘滞效果，因为改变了滚动容器（即使没有出现滚动条），因此，如果你的position:sticky无效，看看是不是某一个祖先元素设置了overflow:hidden，移除即可。</li><li>父级元素也不能设置固定的height高度值，否则也没有粘滞效果。</li><li>同一个父容器中的sticky元素，如果定位值相等，则会重叠；如果属于不同父元素，则会鸠占鹊巢，挤开原来的元素，形成依次占位的效果。</li><li>sticky定位，不仅可以设置top，基于滚动容器上边缘定位，还可以设置bottom，也就是相对底部粘滞。如果是水平滚动，也可以设置left和right值。</li></ol><h2 id="包含块、初始包含块"><a href="#包含块、初始包含块" class="headerlink" title="包含块、初始包含块"></a>包含块、初始包含块</h2><p>根元素的包含块（也称为初始包含块）由用户代理建立，在HTML中，根元素就是html元素，不过有些浏览器会使用body作为根元素。在大多数浏览器中，<strong>初始包含块是一个视窗大小的矩形，不等于视窗</strong>。</p><p>对于一个非根元素，如果其position值是relative或static，包含块则由<strong>最近的块级框</strong>构成。</p><p>对于一个非根元素，如果其position值是absolute，包含块设置为<strong>最近的position值不是static的祖先元素（可以是任何类型）</strong>。这个过程如下：</p><ul><li>如果这个祖先是块级元素，包含块则设置为该元素的内边距边界，也就是内容区域。</li><li>如果没有祖先，元素的包含块定义为初始包含块。</li></ul><p><strong>浮动元素的包含块为其最近的块级祖先元素</strong>。</p><p>应用：使用绝对定位来模拟固定定位（ie6下，fixed失效）</p><p>解决思路：系统的滚动条是在文档上，而不是在html,body上。body下的元素当position为absolute时，包含块为初始包含块，当拉动系统滚动条时，包含块随之移动。把系统滚动条禁止掉，给body加上滚动条，body成为元素的初始包含块。拉动滚动条，达到fixed的效果。</p>]]></content>
    
    
    <categories>
      
      <category>HTML+CSS+JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
      <tag>JS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>两数之和</title>
    <link href="/2022/03/23/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <url>/2022/03/23/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
    
    <content type="html"><![CDATA[<h2 id="1-两数之和"><a href="#1-两数之和" class="headerlink" title="1.两数之和"></a>1.两数之和</h2><p><em>难度：<span style="color:rgb(133, 220, 85);">简单</span></em></p><p><span class="label label-info" style="font-size:20px"><strong>题目</strong></span></p><p class="note note-info">给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出和为目标值 target 的那两个整数，并返回它们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。<br>你可以按任意顺序返回答案。</p><p><span class="label label-primary"><strong>示例 1：</strong></span></p><p class="note note-secondary"><strong>输入：nums = [2,7,11,15], target = 9<br>输出：[0,1]<br>解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。</strong></p><p><span class="label label-primary"><strong>示例 2：</strong></span></p><p class="note note-secondary"><strong>输入：nums = [3,2,4], target = 6<br>输出：[1,2]</strong></p><p><span class="label label-primary"><strong>示例 3：</strong></span></p><p class="note note-secondary"><strong>输入：nums = [3,3], target = 6<br>输出：[0,1]</strong></p><p><span class="label label-warning"><strong>提示：</strong></span></p><p class="note note-light">❉&nbsp;&nbsp;&nbsp;2 <= nums.length <= 10<sup>4</sup><br>❉&nbsp;&nbsp;&nbsp;-10<sup>9</sup> <= nums[i] <= 10<sup>9</sup><br>❉&nbsp;&nbsp;&nbsp;-10<sup>9</sup> <= target <= 10<sup>9</sup><br><strong>❉&nbsp;&nbsp;&nbsp;只会存在一个有效答案</strong></p><p class="note note-warning"><strong>进阶：</strong>你可以想出一个时间复杂度小于 O(n<sup>2</sup>) 的算法吗？</p><p><span class="label label-info" style="font-size:20px"><strong>思路</strong></span></p><p class="note note-info">最简单也是最低级的解法，两层循环暴力求解，时间复杂度为O(n^2^)，老师看了想打人（😅）</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">twoSum</span><span class="hljs-params">(vector&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums, <span class="hljs-keyword">int</span> target)</span> </span>&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = i + <span class="hljs-number">1</span>; j &lt; nums.<span class="hljs-built_in">size</span>(); j++)&#123;<br>                <span class="hljs-keyword">if</span>(nums[i] + nums[j] == target)&#123;<br>                    <span class="hljs-keyword">return</span> &#123;i,j&#125;;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> &#123;&#125;;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
      <category>C/C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C/C++</tag>
      
      <tag>LeetCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C语言printf()函数输出类型详解</title>
    <link href="/2021/10/05/C%E8%AF%AD%E8%A8%80printf()%E5%87%BD%E6%95%B0%E8%BE%93%E5%87%BA%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3/"/>
    <url>/2021/10/05/C%E8%AF%AD%E8%A8%80printf()%E5%87%BD%E6%95%B0%E8%BE%93%E5%87%BA%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p>不常用的类型遇到直接查表，干净又卫生嗷兄弟们</p><h4 id="d"><a href="#d" class="headerlink" title="%d"></a>%d</h4><blockquote><p>以十进制形式输出带符号整数(正数不输出符号)</p></blockquote><h5 id="o-O"><a href="#o-O" class="headerlink" title="%o/O"></a>%o/O</h5><blockquote><p>以八进制形式输出无符号整数(不输出前缀0)</p></blockquote><h5 id="x-X"><a href="#x-X" class="headerlink" title="%x/X"></a>%x/X</h5><blockquote><p>以十六进制形式输出无符号整数(不输出前缀0x)</p></blockquote><h5 id="u"><a href="#u" class="headerlink" title="%u"></a>%u</h5><blockquote><p>以十进制形式输出无符号整数</p></blockquote><h5 id="9-1f"><a href="#9-1f" class="headerlink" title="%9.1f"></a>%9.1f</h5><blockquote><p>以小数形式输出单、双精度实数（总共保留9位数，小数点后保留一位数）</p></blockquote><h5 id="e-E"><a href="#e-E" class="headerlink" title="%e,E"></a>%e,E</h5><blockquote><p>以指数形式输出单、双精度实数</p></blockquote><h5 id="g-G"><a href="#g-G" class="headerlink" title="%g,G"></a>%g,G</h5><blockquote><p>以%f或%e中较短的输出宽度输出单、双精度实数</p></blockquote><h5 id="c"><a href="#c" class="headerlink" title="%c"></a>%c</h5><blockquote><p>输出单个字符</p></blockquote><h5 id="s"><a href="#s" class="headerlink" title="%s"></a>%s</h5><blockquote><p>输出字符串</p></blockquote><h5 id="p"><a href="#p" class="headerlink" title="%p"></a>%p</h5><blockquote><p>输出指针地址</p></blockquote><h5 id="lu"><a href="#lu" class="headerlink" title="%lu"></a>%lu</h5><blockquote><p>32位无符号整数</p></blockquote><h5 id="llu"><a href="#llu" class="headerlink" title="%llu"></a>%llu</h5><blockquote><p>64位无符号整数</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>printf()</category>
      
      <category>C/C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>printf()</tag>
      
      <tag>C/C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>macOS使用C/C++万能头文件保姆级教程</title>
    <link href="/2021/10/05/macOS%E4%BD%BF%E7%94%A8C:C++%E4%B8%87%E8%83%BD%E5%A4%B4%E6%96%87%E4%BB%B6%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B/"/>
    <url>/2021/10/05/macOS%E4%BD%BF%E7%94%A8C:C++%E4%B8%87%E8%83%BD%E5%A4%B4%E6%96%87%E4%BB%B6%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="macOS使用C-C-万能头文件保姆级教程"><a href="#macOS使用C-C-万能头文件保姆级教程" class="headerlink" title="macOS使用C/C++万能头文件保姆级教程"></a>macOS使用C/C++万能头文件保姆级教程</h2><p>Windows上面用万能头文件为我们省去了不少记头文件的麻烦，切换到macOS上来发现C/C++环境中没有自带这个头文件。不行，今天无论如何都要用到万能头文件。</p><h3 id="第一步：安装C-C-环境（本教程使用Xcode软件自带C-C-环境）"><a href="#第一步：安装C-C-环境（本教程使用Xcode软件自带C-C-环境）" class="headerlink" title="第一步：安装C/C++环境（本教程使用Xcode软件自带C/C++环境）"></a>第一步：安装C/C++环境（本教程使用Xcode软件自带C/C++环境）</h3><p>方法1：打开App Store，下载Xcode</p><p><img src="https://img-blog.csdnimg.cn/2021071522352944.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDA4Mjc1Mg==,size_16,color_FFFFFF,t_70" alt="下载Xcode"></p><p>方法2：进入苹果开发者网站下载<a href="https://developer.apple.com/download/all/">Command Line Tool</a>（还是下稳定版好一些）</p><p><img src="https://img-blog.csdnimg.cn/20210715223639750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDA4Mjc1Mg==,size_16,color_FFFFFF,t_70" alt="下载Command Line Tool"></p><h3 id="第二步：打开“终端”，输入"><a href="#第二步：打开“终端”，输入" class="headerlink" title="第二步：打开“终端”，输入"></a>第二步：打开“终端”，输入</h3><p><code>echo | g++ -v -x c++ -E -</code></p><h3 id="找到如下显示内容"><a href="#找到如下显示内容" class="headerlink" title="找到如下显示内容"></a>找到如下显示内容</h3><p><code>/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include</code></p><p><img src="https://img-blog.csdnimg.cn/20210715223731916.png" alt="找到以下内容"></p><h3 id="第三步：在访达中按“⇧⌘G”来调出“前往文件夹”，输入"><a href="#第三步：在访达中按“⇧⌘G”来调出“前往文件夹”，输入" class="headerlink" title="第三步：在访达中按“⇧⌘Ｇ”来调出“前往文件夹”，输入"></a>第三步：在访达中按“⇧⌘Ｇ”来调出“前往文件夹”，输入</h3><p><code>Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1</code></p><p><img src="https://img-blog.csdnimg.cn/2021071522380527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDA4Mjc1Mg==,size_16,color_FFFFFF,t_70" alt="前往v1文件夹"></p><p>看到这么多熟悉的面孔，相信大家已经知道下一步该干嘛了</p><h3 id="第四步：新建文件夹，命名为“bits”，进入“bits”，创建TXT文件并修改名称为“stdc-h”"><a href="#第四步：新建文件夹，命名为“bits”，进入“bits”，创建TXT文件并修改名称为“stdc-h”" class="headerlink" title="第四步：新建文件夹，命名为“bits”，进入“bits”，创建TXT文件并修改名称为“stdc++.h”"></a>第四步：新建文件夹，命名为“bits”，进入“bits”，创建TXT文件并修改名称为“stdc++.h”</h3><p><img src="https://img-blog.csdnimg.cn/20210715223850550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDA4Mjc1Mg==,size_16,color_FFFFFF,t_70" alt="新建stdc++.h"></p><h3 id="第五步：修改文件内容，粘入以下代码"><a href="#第五步：修改文件内容，粘入以下代码" class="headerlink" title="第五步：修改文件内容，粘入以下代码"></a>第五步：修改文件内容，粘入以下代码</h3><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">// C++ includes used for precompiling -*- C++ -*-</span><br><br><span class="hljs-comment">// Copyright (C) 2003-2014 Free Software Foundation, Inc.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// This file is part of the GNU ISO C++ Library.  This library is free</span><br><span class="hljs-comment">// software; you can redistribute it and/or modify it under the</span><br><span class="hljs-comment">// terms of the GNU General Public License as published by the</span><br><span class="hljs-comment">// Free Software Foundation; either version 3, or (at your option)</span><br><span class="hljs-comment">// any later version.</span><br><br><span class="hljs-comment">// This library is distributed in the hope that it will be useful,</span><br><span class="hljs-comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="hljs-comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="hljs-comment">// GNU General Public License for more details.</span><br><br><span class="hljs-comment">// Under Section 7 of GPL version 3, you are granted additional</span><br><span class="hljs-comment">// permissions described in the GCC Runtime Library Exception, version</span><br><span class="hljs-comment">// 3.1, as published by the Free Software Foundation.</span><br><br><span class="hljs-comment">// You should have received a copy of the GNU General Public License and</span><br><span class="hljs-comment">// a copy of the GCC Runtime Library Exception along with this program;</span><br><span class="hljs-comment">// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see</span><br><span class="hljs-comment">// &lt;http://www.gnu.org/licenses/&gt;.</span><br><br><span class="hljs-comment">/** @file stdc++.h</span><br><span class="hljs-comment">*  This is an implementation file for a precompiled header.</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 17.4.1.2 Headers</span><br><br><span class="hljs-comment">// C</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> _GLIBCXX_NO_ASSERT</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cassert&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cctype&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cerrno&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cfloat&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ciso646&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;climits&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;clocale&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;csetjmp&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;csignal&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdarg&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstddef&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdlib&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctime&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> __cplusplus &gt;= 201103L</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ccomplex&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cfenv&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cinttypes&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdbool&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdint&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctgmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cwchar&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cwctype&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br><span class="hljs-comment">// C++</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bitset&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;complex&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;deque&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;exception&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;fstream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;functional&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iomanip&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ios&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iosfwd&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;istream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iterator&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;limits&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;list&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;locale&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;memory&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;new&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;numeric&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;queue&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;set&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sstream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stack&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdexcept&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;streambuf&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;typeinfo&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;utility&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;valarray&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> __cplusplus &gt;= 201103L</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;array&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;atomic&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;chrono&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;condition_variable&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;forward_list&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;future&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;initializer_list&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;mutex&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;random&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ratio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;regex&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;scoped_allocator&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;system_error&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;thread&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;tuple&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;typeindex&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;type_traits&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unordered_map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unordered_set&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br></code></pre></div></td></tr></table></figure><h3 id="第六步：测试"><a href="#第六步：测试" class="headerlink" title="第六步：测试"></a>第六步：测试</h3><p><img src="https://img-blog.csdnimg.cn/20210715224100355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDA4Mjc1Mg==,size_16,color_FFFFFF,t_70" alt="测试"></p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p>1.<a href="https://yang-xijie.github.io/vscode_cpp_macos/10_%E6%9E%81%E9%80%9F%E7%89%88.html">如何快速在macOS上配置VSCode编程Cpp的环境</a></p><p>2.<a href="https://www.cnblogs.com/lipoicyclic/p/14623307.html">macOS下使用bits/stdc++.h万能头文件</a></p>]]></content>
    
    
    <categories>
      
      <category>macOS</category>
      
      <category>C/C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C/C++</tag>
      
      <tag>macOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/10/04/hello-world/"/>
    <url>/2021/10/04/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>Hello World</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hello World</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p>本博客基于作者兴趣爱好打造，请大家友好评论，交流学习！</p>]]></content>
    
  </entry>
  
  
  
</search>
